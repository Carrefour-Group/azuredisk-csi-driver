apiVersion: v1
kind: ServiceAccount
metadata:
  name: azdiskschedulerextender
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azdiskschedulerextender-role
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "update"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["create"]
  - apiGroups: [""]
    resourceNames: ["kube-scheduler"]
    resources: ["endpoints"]
    verbs: ["delete", "get", "patch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["bindings", "pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["patch", "update"]
  - apiGroups: [""]
    resources: ["replicationcontrollers", "services"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["*"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims", "persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "update", "create"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azdiskschedulerextender-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azdiskschedulerextender-role
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: azdiskschedulerextender
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: azdiskschedulerextender-config
  namespace: kube-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    schedulerName: azdiskschedulerextender
    algorithmSource:
      policy:
        configMap:
          namespace: kube-system
          name: azdiskschedulerextender-policy
    leaderElection:
      leaderElect: true
      lockObjectName: azdiskschedulerextender
      lockObjectNamespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: azdiskschedulerextender-policy
  namespace: kube-system
data:
 policy.cfg : |
  {
    "kind" : "Policy",
    "apiVersion" : "v1",
    "predicates" : [
      {"name" : "PodFitsHostPorts"},
      {"name" : "PodFitsResources"},
      {"name" : "NoDiskConflict"},
      {"name" : "MatchNodeSelector"},
      {"name" : "HostName"}
    ],
    "priorities" : [
      {"name" : "LeastRequestedPriority", "weight" : 1},
      {"name" : "BalancedResourceAllocation", "weight" : 1},
      {"name" : "ServiceSpreadingPriority", "weight" : 1},
      {"name" : "EqualPriority", "weight" : 1}
    ],
    "extenders" : [{
      "urlPrefix": "http://localhost:8080/azdiskschedulerextender",
      "filterVerb": "filter",
      "prioritizeVerb": "prioritize",
      "weight": 1,
      "enableHttps": false,
      "nodeCacheCapable": false
    }],
    "hardPodAffinitySymmetricWeight" : 10
  }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azdiskschedulerextender
  namespace: kube-system
  labels:
    app: azdiskschedulerextender
spec:
  replicas: 2
  selector:
    matchLabels:
      app: azdiskschedulerextender
  template:
    metadata:
      labels:
        app: azdiskschedulerextender
    spec:
      serviceAccountName: azdiskschedulerextender
      volumes:
      - name: azdiskschedulerextender-config
        configMap:
          name: azdiskschedulerextender-config
      containers:
      - name: azdiskscheduler-ctr
        image: gcr.io/google_containers/hyperkube:v1.16.3
        imagePullPolicy: IfNotPresent
        args:
        - kube-scheduler
        - --config=/azdiskschedulerextender/config.yaml
        - --v=5
        volumeMounts:
        - name: azdiskschedulerextender-config
          mountPath: /azdiskschedulerextender
      - name: azdiskschedulerextender-ctr
        image: docker.io/ramants17/azdiskschedulerextender-csi:latest
        imagePullPolicy: Always
        args:
        - "--port=8080"
        - "--metrics-address=0.0.0.0:29604"
        - "--v=5"
        livenessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 2
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 20
          periodSeconds: 3
        ports:
          - name: extender-port
            containerPort: 8080
            hostPort: 8080
          - name: metrics-port
            containerPort: 29604
            protocol: TCP